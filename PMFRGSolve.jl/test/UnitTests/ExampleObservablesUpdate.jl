using Dates


function save_observables(Method, Obs)
    filename = "example_observables_test_results-$(today())-$(gethostname()).jl"

    if !isfile(filename)
        println("Saving new reference values in for tests in $filename")
        create_file_with_preamble(filename)
    end
    open(filename, "a") do io
        println(io, "function example_Obs(::$(typeof(Method)))")
        println(io, Obs)
        println(io, "end")
    end
end

function create_file_with_preamble(filename)
    commit_hash = read(`git rev-parse HEAD`, String) |> strip
    open(filename, "w") do io
        print(
            io,
            """
# PLEASE REFORMAT THIS AUTOGENERATED FILE.
# Generated on $(today())
# on machine named $(gethostname())
# with code version: $commit_hash
""",
        )
        link_and_copy_manifest(io)
        print(
            io,
            """
# Values generated in tests will be saved below
# This preamble WILL NOT BE REGENERATED")
# if this file exists.
""",
        )
    end
end

"""Print the git SHA-1 of the Manifest file in the path, and copies it in the test directory"""
function link_and_copy_manifest(io)

    real_manifest_path = let PMFRG_package_path = pathof(PMFRG) |> dirname |> dirname
        joinpath(PMFRG_package_path, "Manifest.toml")
    end

    manifest_copy_path =
        let manifest_copy_dir = @__DIR__,
            manifest_copy_name = "Manifest_example_observables_test_results-$(today()).toml"

            joinpath(manifest_copy_dir, manifest_copy_name)
        end

    println("Copying the Manifest file $real_manifest_path to $manifest_copy_path")
    run(`cp $real_manifest_path $manifest_copy_path`)
    println("Adding it to the repository. Rename it accordingly.")
    run(`git add $manifest_copy_path`)
    manifest_git_sha1 = read(`git hash-object $manifest_copy_path`, String) |> strip
    println(io, "# Manifest git SHA-1: $manifest_git_sha1")
    println(io, "# (compare with `git hash-file`)")
end
